# API version
API_VERSION=v1

# Server Configuration
PORT=8080

# frontend website (for handling cors), acccepts comma-separated-values
FRONTEND_WEBSITE_URLS=http://localhost:3000,http://localhost:8080

# RAG Query API Key (this doesn't offer protection, just identifies the client)
RAG_QUERY_API_KEY="RAG_QUERY_API_KEY"

# RAG Management API Key (protects management endpoints)
RAG_MANAGEMENT_API_KEY="RAG_MANAGEMENT_API_KEY"

# Gemini Configuration
GEMINI_BASE_URL="https://generativelanguage.googleapis.com/v1beta"
GEMINI_API_KEY="GOOGLE_GEMINI_API_KEY"
GEMINI_EMBEDDING_MODEL="text-embedding-004"
GEMINI_CHAT_MODEL="gemini-2.0-flash-lite"
GEMINI_RAG_TYPE="advanced" # basic (no RAG) or advanced (RAG)
GEMINI_N_RESULTS="5" # number of results to use (only used for "advanced" rag type)
GEMINI_SYSTEM_PROMPT="You are a helpful assistant for React ChatBotify, a React library for building flexible and extensible chatbots."

# ChromaDB Configuration
CHROMA_URL="http://chromadb"
CHROMA_PORT="8000"
CHROMA_TENANT="default_tenant"
CHROMA_DATABASE="default_database"
CHROMA_AUTH_TOKEN="" # Optional: specify auth token if ChromaDB requires authentication

# MongoDB Configuration
MONGO_INITDB_ROOT_USERNAME=rcb-rag-api
MONGO_INITDB_ROOT_PASSWORD=MONGODB_ROOT_PASSWORD
MONGO_INITDB_DATABASE=rcb-rag-api
MONGO_INITDB_PORT=27017

# OpenTelemetry Configuration
OTEL_SERVICE_NAME=otel-collector
OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317